openapi: 3.0.1
info:
  title: Labour Broker API
  description: API for simulating the concept of people procuring jobs. This includes salaries being paid.
  version: 1.0.0
servers:
  - url: https://api.labour.projects.bbdgrad.com
    description: Production server
paths:

  /job:
    post:
      summary: Request a job for a persona.
      description: Creates a new job with a salary for a specific persona.
      tags:
        - Jobs
      requestBody:
        description: Details of the persona.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        '201':
          description: Job successfully assigned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Invalid request parameters.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.

  /job/{personaId}:
    delete:
      summary: Remove a persona from their position.
      description: Used when a persona dies and they need to be removed from employment.
      tags:
        - Jobs
      parameters:
        - name: personaId
          in: path
          required: true
          description: The ID of the persona to remove from their position.
          schema:
            type: string
      responses:
        '204':
          description: Employment sucessfully terminated.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.

  /salary/increases:
    put:
      summary: Increase the salaries of a number of employees.
      description: Increase the salary of a set of employees by a corresponding percentage.
      tags:
        - Salary
      requestBody:
        description: Details of the persona.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalaryIncreaseRequest'
      responses:
        '200':
          description: Salaries successfully increased.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSet'
        '400':
          description: Invalid request parameters.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.
  
  /salary/minimum:
    put:
      summary: Set minimum wage.
      description: Alter the minimum amount employees can be paid.
      tags:
        - Salary
      requestBody:
        description: Details of the persona.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlterMinimumWageRequest'
      responses:
        '200':
          description: Minimum wage successfully altered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimumWage'
        '400':
          description: Invalid request parameters.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.

  /salary/{personaId}:
    get:
      summary: Get employee salary
      description: Returns the salary of the specified persona, if it exists.
      tags:
        - Salary
      parameters:
        - name: personaId
          in: path
          required: true
          description: The ID of the persona to retrieve the salary of.
          schema:
            type: string
      responses:
        '200':
          description: Persona's salary.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '401':
          description: Not authorised to access this endpoint.
        '404':
          description: Employee not found.
        '500':
          description: Internal server error.

  /account:
    post:
      summary: Send an transaction notification.
      description: Creates a new bank transaction log entry.
      tags:
        - Account
      requestBody:
        description: Details of the persona.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Job successfully assigned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid request parameters.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.

  /simulation/reset:
    delete:
      summary: Reset the simulation to its base state.
      description: Removes all data related to the previous simulation and starts a new one with all values and tables set to default.
      tags:
        - Simulation
      responses:
        '204':
          description: Simulation successfully reset.
        '401':
          description: Not authorised to access this endpoint.
        '500':
          description: Internal server error.

components:
  schemas:
    CreateJobRequest:
      type: object
      required:
        - personaId
      properties:
        personaId:
          type: string
          description: The unique identifier for the persona.
    
    SalaryIncreaseRequest:
      type: array
      items:
        type: object
        required:
          - personaId
          - increasePercentage
        properties:
          personaId:
            type: string
            description: The unique identifier for the persona.
          increasePercentage:
            type: integer
            description: The percentage to increase the persona's salary with.

    AlterMinimumWageRequest:
      type: object
      required:
        - minimumWage
      properties:
        minimumWage:
          type: number
          description: The new minimum wage value.

    CreateTransactionRequest:
      type: object
      required:
        - amount
        - datetime
        - source
        - reason
      properties:
        amount:
          type: number
          description: Amount deducted or paid into account.
        datetime:
          type: string
          description: Datetime of transaction.
        source:
          type: string
          description: The other party involved in the transaction.
        reason:
          type: string
          description: What the payment is for.

    Job:
      type: object
      properties:
        salary:
          type: number
          description: The assigned salary for the job.

    Employee:
      type: object
      properties:
        personaId:
          type: string
          description: The unique identifier for the persona.
        salary:
          type: number
          description: The assigned salary for the employee's job.
    
    EmployeeSet:
      type: array
      items:
        $ref: '#/components/schemas/Employee'

    MinimumWage:
      type: object
      properties:
        minimumWage:
          type: number
          description: The new minimum wage value.

    Transaction:
      type: object
      properties:
        amount:
          type: number
          description: Amount deducted or paid into account.
        datetime:
          type: string
          description: Datetime of transaction.
        source:
          type: string
          description: The other party involved in the transaction.
        reason:
          type: string
          description: What the payment is for.
    
